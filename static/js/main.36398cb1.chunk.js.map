{"version":3,"sources":["components/Pagination/styles.js","components/Pagination/Pagination.js","api/index.js","actions/posts.js","components/Posts/Post/styles.js","components/Posts/Post/VolcanoErupt.png","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","assets/volcano.png","styles.js","App.js","reportWebVitals.js","reducers/index.js","reducers/posts.js","index.js"],"names":["makeStyles","theme","selectedPage","color","otherPages","Pagination","postsPerPage","totalPosts","paginate","currentPage","setCurrentPage","pageNumbers","classes","useStyles","i","Math","ceil","push","id","className","onClick","map","number","selectedPageStyle","length","url","fetchVolcanoes","axios","get","updateVolcano","name","updatedVolcano","put","deleteVolcano","delete","searchVolcano","volcano","a","volcanoes","volcanoArray","data","filter","volcanoData","toLowerCase","includes","dispatch","api","selectedVolcanoes","type","payload","console","error","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","margin","overlay","top","left","details","title","padding","cardActions","Post","setCurrentName","setSearchBoolean","useDispatch","removeVolcano","Card","CardMedia","image","volcanoEruptPicture","Typography","vartiant","variant","CardContent","JSON","stringify","isActive","population","description","discovered","latitude","longitude","CardActions","Button","href","size","fontSize","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","useSelector","state","posts","useState","indexOfLastVolcano","indexOfFirstVolcano","currentVolcanoes","slice","Grid","containter","container","item","xs","sm","_id","pageNumber","CircularProgress","root","paper","marginTop","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentName","searchBoolean","currentVolcano","find","v","index","setVolcanoData","useEffect","clear","resetVolcanoes","flipIcon","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","newVolcano","post","TextField","label","fullWidth","value","onChange","target","appBar","heading","marginLeft","App","Container","maxWidth","AppBar","align","src","Volcano","alt","Grow","in","justify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","action","_name","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36398cb1.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nexport default makeStyles((theme)=>({\r\n    selectedPage:{\r\n        color: 'red'\r\n    },\r\n    otherPages:{\r\n        color: ''\r\n    }\r\n}));","import React from 'react';\r\nimport useStyles from './styles';\r\n\r\nfunction Pagination({postsPerPage, totalPosts, paginate, currentPage, setCurrentPage}) {\r\n    const pageNumbers = [];\r\n    const classes = useStyles();\r\n\r\n    for(let i=1; i<= Math.ceil(totalPosts / postsPerPage); i++){\r\n        pageNumbers.push(i);\r\n    };\r\n\r\n\r\n   const renderPageNumbers = ()=> pageNumbers.map(number => {\r\n       let selectedPageStyle = currentPage == number? classes.selectedPage : classes.otherPages;\r\n\r\n        if (number == 1 || number == pageNumbers.length || (number >= currentPage - 2 && number <= currentPage + 2)) {\r\n        return (\r\n            <li key={number} className=\"page-item\">\r\n            <span onClick= {()=> paginate(number)} className={selectedPageStyle + ' page-link'}>\r\n                {number}\r\n            </span>\r\n        </li>\r\n        )}\r\n      });\r\n\r\n    return (\r\n       <nav  id='pagination'>\r\n           <ul className= 'pagination'>  \r\n           <li className=\"page-item\">\r\n                <span onClick= {()=> {currentPage> 1? setCurrentPage(currentPage-1): setCurrentPage(currentPage)}} className=\"page-link\">\r\n                     &laquo;\r\n                </span>\r\n           </li>\r\n                {renderPageNumbers()}\r\n            <li className=\"page-item\">\r\n                <span onClick= {()=> {currentPage<pageNumbers.length? setCurrentPage(currentPage+1): setCurrentPage(currentPage)}} className=\"page-link\">\r\n                    &raquo;\r\n                 </span>\r\n           </li>\r\n           </ul>\r\n           \r\n       </nav>\r\n    )\r\n};\r\n\r\nexport default Pagination;\r\n","import axios from 'axios'\r\n\r\n\r\nconst url = 'https://blooming-spire-52990.herokuapp.com/volcanoes';\r\n\r\n\r\nexport const fetchVolcanoes = () => axios.get(url);\r\nexport const createVolcano = (newVolcano) => axios.post(url, newVolcano);\r\nexport const updateVolcano = (name, updatedVolcano) => axios.put(url+'/'+ name, updatedVolcano);\r\nexport const deleteVolcano = (name) => axios.delete(url+'/'+name);\r\n\r\nexport const searchVolcano = async (volcano)=>{\r\n    const volcanoes = await fetchVolcanoes();\r\n    \r\n    let volcanoArray = volcanoes.data.filter(volcanoData=>{\r\n\r\n          return volcanoData.name.toLowerCase().includes(volcano.name.toLowerCase());\r\n               \r\n    })\r\n        return volcanoArray;\r\n};\r\n\r\n","import * as api from '../api';\r\n\r\nexport const getPosts = () => async (dispatch)=>{\r\n    try{\r\n        const {data} = await api.fetchVolcanoes();\r\n        if(data){\r\n            dispatch({type: 'FETCH_ALL', payload: data});\r\n        };\r\n    } catch (error){\r\n        console.error(error);\r\n    };\r\n};\r\n\r\n\r\nexport const createVolcano = (volcano)=> async (dispatch)=>{\r\n    try{\r\n        const {data} = await api.createVolcano(volcano);\r\n        if(data){\r\n        dispatch({type: 'CREATE', payload: data});\r\n        };\r\n    }catch(error){\r\n        console.error(error);\r\n    };\r\n};\r\n\r\nexport const updateVolcano = (name, updatedVolcano) => async (dispatch) =>{\r\n    try{\r\n        const {data} = await api.updateVolcano(name, updatedVolcano);\r\n\r\n        if(data){\r\n            dispatch({type: 'UPDATE', payload: data});\r\n        };\r\n    }catch(error){\r\n        console.error(error);\r\n    };\r\n};\r\n\r\nexport const deleteVolcano = (name) => async (dispatch) =>{\r\n    try{\r\n        await api.deleteVolcano(name);\r\n        dispatch({type: 'DELETE', payload: name});\r\n    }catch(error){\r\n        console.error(error);\r\n    };\r\n};\r\n\r\nexport const searchVolcano = (volcano)=> async (dispatch) =>{\r\n    try{\r\n      let selectedVolcanoes =  await api.searchVolcano(volcano);\r\n        if(selectedVolcanoes){\r\n            dispatch({type: 'SEARCH', payload: selectedVolcanoes});\r\n        }\r\n    }catch(error){\r\n        console.error(error);\r\n    };\r\n};","import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport default makeStyles((theme)=>({\r\n    media:{\r\n        height: 0,\r\n        paddingTop: '56.25%',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        backgroundBlendMode: 'darken'\r\n    }\r\n    ,\r\n    border:{\r\n        border: 'solid'\r\n    }\r\n    ,\r\n    fullHeightCard:{\r\n         height: '100%'\r\n     }   \r\n    ,\r\n    card:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        borderRadius: '15px',\r\n        height: '100%',\r\n        position: 'relative',\r\n        margin: '20px',\r\n        \r\n        \r\n    },\r\n    overlay:{\r\n        position: 'absolute',\r\n        top: '40px',\r\n        color: 'white',\r\n        left: '40px'\r\n    }\r\n    ,\r\n    details: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        margin: '20px'\r\n    },\r\n\r\n    title:{\r\n        padding: '0 16px',\r\n    },\r\n\r\n    cardActions: {\r\n        padding: '0 16px 8px 16px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    }\r\n}));","export default __webpack_public_path__ + \"static/media/VolcanoErupt.7107718b.png\";","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {Card, CardActions, CardContent, CardMedia, Button, Typography} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { deleteVolcano } from '../../../actions/posts';\r\nimport useStyles from './styles';\r\nimport volcanoEruptPicture from './VolcanoErupt.png';import { getPosts } from '../../../actions/posts';\r\n;\r\n\r\n\r\n\r\nconst Post = ({volcano, setCurrentName, setSearchBoolean})=>{\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const removeVolcano= (name)=>{\r\n        dispatch(deleteVolcano(name));\r\n        \r\n    };\r\n\r\n    const edit = ()=>{\r\n        setCurrentName(volcano.name)\r\n        setSearchBoolean(false);\r\n    };\r\n    \r\n    return (\r\n       <Card className={classes.card}>\r\n           <CardMedia className= {classes.media} image={volcanoEruptPicture} title={volcano.name} />\r\n           <div className= {classes.overlay}>\r\n                <Typography vartiant= 'h5'>Name: {volcano.name}</Typography>\r\n                <Typography variant= 'h6'>Type: {volcano.type}</Typography>\r\n           </div>\r\n           <CardContent>\r\n                <Typography className={classes.details} variant= \"body2\" color= 'textPrimary'>isActive: {JSON.stringify(volcano.isActive)}</Typography>\r\n                <Typography className={classes.details} variant= \"body2\" color= 'textPrimary'>Population: {volcano.population}</Typography>\r\n                <Typography className={classes.details} variant='body2' color= 'textPrimary'>Description: {volcano.description}</Typography>\r\n               <Typography className={classes.details} variant= \"body2\" color= 'textPrimary'>Discovered: {volcano.discovered}</Typography>\r\n               <Typography className={classes.details} variant= \"body2\" color= 'textPrimary'>Latitude: {volcano.latitude}</Typography>\r\n               <Typography className={classes.details} variant= \"body2\" color= 'textPrimary'>Longitude: {volcano.longitude}</Typography>\r\n           </CardContent>\r\n           <CardActions className= {classes.cardActions}>\r\n               <Button href= '#form' size= 'small' color='primary' onClick={()=>{edit()}}>\r\n                    <EditIcon />\r\n                    Edit\r\n               </Button>\r\n               <Button size= 'small' color= 'secondary' onClick= {()=>{ removeVolcano(volcano.name);}}>\r\n                    <DeleteIcon fontSize= 'small' />\r\n                    Delete\r\n               </Button>\r\n           </CardActions>\r\n\r\n       </Card>\r\n    )\r\n};\r\n\r\nexport default Post;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport default makeStyles((theme)=>({\r\n        mainContainer:{\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        },\r\n        smMargin:{\r\n            margin: theme.spacing(1,)\r\n        },\r\n        actionDiv:{\r\n            textAlign: 'center'\r\n        }\r\n}));","import React, {useState} from 'react';\r\nimport {Grid, CircularProgress} from '@material-ui/core';\r\nimport Post from './Post/Post'\r\nimport useStyles from './styles'\r\nimport { useSelector } from 'react-redux';\r\nimport Pagination from '../Pagination/Pagination';\r\n\r\n\r\nconst Posts = ({setCurrentName, setSearchBoolean})=>{\r\n    const volcanoes = useSelector((state)=> state.posts);\r\n    const classes = useStyles();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage, setPostsPerPage] = useState(6);\r\n    const indexOfLastVolcano = currentPage * postsPerPage;\r\n    const indexOfFirstVolcano = indexOfLastVolcano - postsPerPage;\r\n    const currentVolcanoes = volcanoes.slice(indexOfFirstVolcano, indexOfLastVolcano);\r\n    const paginate = (pageNumber)=> setCurrentPage(pageNumber); \r\n        \r\n\r\n    return (\r\n       !currentVolcanoes.length ? <CircularProgress /> : (\r\n           <Grid className= {classes.containter} container alignItems='stretch' spacing='5'>\r\n               {currentVolcanoes.map((volcano)=>(\r\n                   <Grid key={volcano._id} item xs={12} sm={6}>\r\n                       <Post setSearchBoolean= {setSearchBoolean} volcano={volcano} setCurrentName={setCurrentName} />\r\n                   </Grid>\r\n\r\n               ))}\r\n                <Pagination setCurrentPage={setCurrentPage} currentPage={currentPage} postsPerPage={postsPerPage} totalPosts={volcanoes.length} paginate={paginate} />\r\n           </Grid>\r\n       )\r\n    )\r\n};\r\n\r\nexport default Posts;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport default makeStyles((theme)=>({\r\n        root: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(2),\r\n            marginTop: '30px',\r\n        },\r\n        form: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'center'\r\n        },\r\n        fileInput:{\r\n            width: '97%',\r\n            margin: '10px 0'\r\n        },\r\n        buttonSubmit:{\r\n            marginBottom: 10\r\n        }\r\n}));","import React, {useState, useEffect} from 'react';\r\nimport {TextField, Button, Typography, Paper} from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { searchVolcano , updateVolcano, createVolcano } from '../../actions/posts';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst Form = ({currentName, setCurrentName, searchBoolean, setSearchBoolean})=>{\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const currentVolcano = useSelector((state)=> currentName? state.posts.find((v)=> v.name == currentName): null);\r\n    const [volcanoData, setVolcanoData] = useState({\r\n        _id: \"\",\r\n        index: null,\r\n        isActive: null,\r\n        population: \"\",\r\n        name: \"\",\r\n        description: \"\",\r\n        discovered: \"\",\r\n        latitude: null,\r\n        longitude: null,\r\n        type: \"\"\r\n    });\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n        if(currentVolcano){\r\n            setVolcanoData(currentVolcano);\r\n        };\r\n    }, [currentVolcano]);\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(currentName){\r\n            dispatch(updateVolcano(currentName, volcanoData));\r\n            resetVolcanoes();\r\n        }else if(searchBoolean){\r\n            dispatch(searchVolcano(volcanoData));\r\n        }else{\r\n        dispatch(createVolcano(volcanoData));\r\n        resetVolcanoes();\r\n        }\r\n        clear();\r\n    }\r\n\r\n    const clear = ()=>{\r\n        setCurrentName(null);\r\n        setVolcanoData({\r\n            _id: \"\",\r\n            index: \"\",\r\n            isActive: \"\",\r\n            population: \"\",\r\n            name: \"\",\r\n            description: \"\",\r\n            discovered: \"\",\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            type: \"\"\r\n        });\r\n    };\r\n\r\n    const resetVolcanoes = ()=>{\r\n        dispatch(searchVolcano({name: ''}))\r\n    };\r\n\r\n    const flipIcon = ()=>{\r\n        setSearchBoolean(!searchBoolean)\r\n    };\r\n\r\n    return (\r\n        <Paper id='form' className={classes.paper}>\r\n            {searchBoolean? <AddIcon onClick={flipIcon} /> : <SearchIcon onClick={flipIcon}/>}\r\n                <HomeIcon onClick={resetVolcanoes} />\r\n            <form autoComplete= 'off' noValidate className= {`${classes.form} ${classes.root}`} onSubmit={handleSubmit}>\r\n                <Typography variant= 'h6'>{currentName? 'Editing': (searchBoolean? 'Searching':'Creating') } a Volcano</Typography>\r\n                {searchBoolean? <></>:<TextField\r\n                    name= 'isActive'\r\n                    variant= 'outlined'\r\n                    label = 'isActive'\r\n                    fullWidth\r\n                    value={volcanoData.isActive}\r\n                    onChange= {(e)=>setVolcanoData({...volcanoData, isActive: e.target.value})}\r\n                /> }\r\n                 {searchBoolean? <></>:<TextField\r\n                    name= 'population'\r\n                    variant= 'outlined'\r\n                    label = 'Population'\r\n                    fullWidth\r\n                    value={volcanoData.population}\r\n                    onChange= {(e)=>setVolcanoData({...volcanoData, population: e.target.value})}\r\n                /> }\r\n                \r\n                 <TextField\r\n                    name= 'name'\r\n                    variant= 'outlined'\r\n                    label = 'Name'\r\n                    fullWidth\r\n                    value={volcanoData.name}\r\n                    onChange= {(e)=>setVolcanoData({...volcanoData, name: e.target.value})}\r\n                />\r\n                {searchBoolean? <></>: <TextField\r\n                    name= 'description'\r\n                    variant= 'outlined'\r\n                    label = 'Description'\r\n                    fullWidth\r\n                    value={volcanoData.description}\r\n                    onChange= {(e)=>setVolcanoData({...volcanoData, description: e.target.value})}\r\n                />}\r\n                \r\n                {searchBoolean? <></>: <TextField\r\n                    name= 'discovered'\r\n                    variant= 'outlined'\r\n                    label = 'Discovered'\r\n                    fullWidth\r\n                    value={volcanoData.discovered}\r\n                    onChange= {(e)=>setVolcanoData({...volcanoData, discovered: e.target.value})}\r\n                />}\r\n\r\n                {searchBoolean? <></>: <TextField\r\n                    name= 'latitude'\r\n                    variant= 'outlined'\r\n                    label = 'Latitude'\r\n                    fullWidth\r\n                    value={volcanoData.latitude}\r\n                    onChange= {(e)=>setVolcanoData({...volcanoData, latitude: e.target.value})}\r\n                />}\r\n\r\n                {searchBoolean? <></>:<TextField\r\n                    name= 'longitude'\r\n                    variant= 'outlined'\r\n                    label = 'Longitude'\r\n                    fullWidth\r\n                    value={volcanoData.longitude}\r\n                    onChange= {(e)=>setVolcanoData({...volcanoData, longitude: e.target.value})}\r\n                />}\r\n                 \r\n                 \r\n                 \r\n                {searchBoolean? <Button className= {classes.buttonSubmit} variant = 'contained' color='primary' size='small' type= 'submit' fullWidth>\r\n                    Search\r\n                </Button>: <Button className= {classes.buttonSubmit} variant = 'contained' color='primary' size= 'large' fullWidth type= 'submit'>\r\n                    Submit\r\n                </Button> }\r\n                <Button className= {classes.buttonSubmit} variant = 'contained' color='secondary' size='small' onClick={clear} fullWidth>\r\n                    Clear\r\n                </Button>\r\n                \r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Form;","export default __webpack_public_path__ + \"static/media/volcano.9fa67366.png\";","import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport default makeStyles(()=>({\r\n        appBar:{\r\n            borderRadius: 15,\r\n            margin: '30px 0',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        heading:{\r\n            color: 'black'\r\n        },\r\n        image:{\r\n            marginLeft: '15 px',\r\n        }\r\n}));","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {Container, AppBar, Typography, Grow, Grid} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Pagination from './components/Pagination/Pagination';\nimport {getPosts } from './actions/posts';\nimport Posts from './components/Posts/Posts';\nimport Form from './components/Form/Form';\nimport Volcano from './assets/volcano.png';\nimport useStyles from './styles';\n\nfunction App() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [currentName, setCurrentName] = useState(null);\n    const [searchBoolean, setSearchBoolean] = useState(false);\n      \n    useEffect(()=>{\n      dispatch(getPosts());\n    }, [dispatch, currentName]);\n\n    \n  return (\n    <Container maxWidth= 'lg'>\n      <AppBar className={classes.AppBar} position = 'static' color= 'inherit'>\n        <Typography className={classes.heading} variant = 'h2' align= 'center'>\n          Volcanoes\n        </Typography>\n        <img className= {classes.image} src={Volcano} alt='Volcanoes' height= '80'  />\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid container justify= 'space-between' alignItems= 'stretch' spacing= {3}>\n            <Grid item xs={12} sm={7}>\n              <Posts setSearchBoolean= {setSearchBoolean} setCurrentName={setCurrentName} />\n           </Grid>\n           <Grid item xs={12} sm={4}> \n            <Form searchBoolean={searchBoolean} setSearchBoolean= {setSearchBoolean} currentName = {currentName} setCurrentName={setCurrentName} />\n           </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from 'redux';\r\n\r\nimport posts from './posts';\r\n\r\nexport default combineReducers({\r\n    posts,\r\n});","export default (state= [], action)=>{\r\n    switch(action.type){\r\n        case 'FETCH_ALL' :\r\n            return action.payload;\r\n        case 'CREATE' :\r\n            return [...state, action.payload];\r\n        case 'UPDATE': \r\n            return state.map(post=> post.name == action.payload._name ? action.payload : post);   \r\n        case 'DELETE':\r\n            return state\r\n        case 'SEARCH':\r\n            return action.payload;    \r\n        default:\r\n            return state;\r\n    };\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from './reducers';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}