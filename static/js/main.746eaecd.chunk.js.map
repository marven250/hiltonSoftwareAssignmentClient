{"version":3,"sources":["api/index.js","actions/posts.js","components/Posts/Post/styles.js","components/Posts/Post/VolcanoErupt.png","components/Posts/Post/Post.js","components/Posts/styles.js","components/Pagination/styles.js","components/Pagination/Pagination.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","assets/volcano.png","styles.js","App.js","reportWebVitals.js","reducers/index.js","reducers/posts.js","reducers/currentVolcano.js","reducers/searchBoolean.js","index.js"],"names":["url","fetchVolcanoes","axios","get","updateVolcano","name","updatedVolcano","put","deleteVolcano","delete","searchVolcano","volcano","a","volcanoes","volcanoArray","data","filter","volcanoData","toLowerCase","includes","getPosts","dispatch","api","type","payload","console","error","updateSearchBoolean","searchBoolean","makeStyles","theme","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","margin","overlay","top","color","left","details","title","padding","cardActions","Post","classes","useStyles","useDispatch","removeVolcano","edit","currentVolcano","Card","className","CardMedia","image","volcanoEruptPicture","Typography","vartiant","variant","CardContent","JSON","stringify","isActive","population","description","discovered","latitude","longitude","CardActions","Button","href","size","onClick","fontSize","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","selectedPage","otherPages","Pagination","postsPerPage","totalPosts","paginate","currentPage","setCurrentPage","pageNumbers","i","Math","ceil","push","id","map","number","selectedPageStyle","length","Posts","setSearchBoolean","useSelector","state","posts","useState","indexOfLastVolcano","indexOfFirstVolcano","currentVolcanoes","slice","Grid","containter","container","item","xs","sm","_id","pageNumber","CircularProgress","root","paper","marginTop","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentName","find","v","index","setVolcanoData","useEffect","clear","flipIcon","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","selectedVolcanoes","newVolcano","post","createVolcano","TextField","label","fullWidth","value","onChange","target","appBar","heading","marginLeft","App","Container","maxWidth","AppBar","align","src","Volcano","alt","Grow","in","justify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","action","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.746eaecd.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n\r\nconst url = 'https://blooming-spire-52990.herokuapp.com/volcanoes';\r\n\r\n\r\nexport const fetchVolcanoes = () => axios.get(url);\r\nexport const createVolcano = (newVolcano) => axios.post(url, newVolcano);\r\nexport const updateVolcano = (name, updatedVolcano) => axios.put(url+'/'+ name, updatedVolcano);\r\nexport const deleteVolcano = (name) => axios.delete(url+'/'+name);\r\n\r\nexport const searchVolcano = async (volcano)=>{\r\n    const volcanoes = await fetchVolcanoes();\r\n    \r\n    let volcanoArray = volcanoes.data.filter(volcanoData=>{\r\n\r\n          return volcanoData.name.toLowerCase().includes(volcano.name.toLowerCase());\r\n               \r\n    })\r\n        return volcanoArray;\r\n};\r\n\r\n","import * as api from '../api';\r\n\r\nexport const getPosts = () => async (dispatch)=>{\r\n    try{\r\n        const {data} = await api.fetchVolcanoes();\r\n        if(data){\r\n            dispatch({type: 'FETCH_ALL', payload: data});\r\n        };\r\n    } catch (error){\r\n        console.error(error);\r\n    };\r\n};\r\n\r\n\r\nexport const createVolcano = (volcano)=> async (dispatch)=>{\r\n    try{\r\n        const {data} = await api.createVolcano(volcano);\r\n        if(data){\r\n        dispatch({type: 'CREATE', payload: data});\r\n        };\r\n    }catch(error){\r\n        console.error(error);\r\n    };\r\n};\r\n\r\nexport const updateVolcano = (name, updatedVolcano) => async (dispatch) =>{\r\n    try{\r\n         await api.updateVolcano(name, updatedVolcano);\r\n            dispatch({type: 'UPDATE', payload: updatedVolcano});\r\n\r\n    }catch(error){\r\n        console.error(error);\r\n    };\r\n};\r\n\r\nexport const deleteVolcano = (name) => async (dispatch) =>{\r\n    try{\r\n        await api.deleteVolcano(name);\r\n        dispatch({type: 'DELETE', payload: name});\r\n    }catch(error){\r\n        console.error(error);\r\n    };\r\n};\r\n\r\nexport const searchVolcano = (volcano)=> async (dispatch) =>{\r\n    try{\r\n      let selectedVolcanoes =  await api.searchVolcano(volcano);\r\n        if(selectedVolcanoes){\r\n            dispatch({type: 'SEARCH', payload: selectedVolcanoes});\r\n        }\r\n    }catch(error){\r\n        console.error(error);\r\n    };\r\n};\r\n\r\n\r\nexport const updateCurrentVolcano = (currentVolcano)=> async (dispatch)=>{\r\n    try{\r\n            dispatch({type: 'UPDATE_CURRENT_VOLCANO', payload: currentVolcano});\r\n        \r\n    }catch(error){\r\n        console.error(error);\r\n    };\r\n};\r\n\r\nexport const updateSearchBoolean = (searchBoolean) => async (dispatch)=>{\r\n    try{\r\n            dispatch({type: 'UPDATE_SEARCH_BOOLEAN', payload: searchBoolean});\r\n        \r\n    }catch(error){\r\n        console.error(error);\r\n    };\r\n};","import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport default makeStyles((theme)=>({\r\n    media:{\r\n        height: 0,\r\n        paddingTop: '56.25%',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        backgroundBlendMode: 'darken'\r\n    }\r\n    ,\r\n    border:{\r\n        border: 'solid'\r\n    }\r\n    ,\r\n    fullHeightCard:{\r\n         height: '100%'\r\n     }   \r\n    ,\r\n    card:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        borderRadius: '15px',\r\n        height: '100%',\r\n        position: 'relative',\r\n        margin: '20px',\r\n        \r\n        \r\n    },\r\n    overlay:{\r\n        position: 'absolute',\r\n        top: '40px',\r\n        color: 'white',\r\n        left: '40px'\r\n    }\r\n    ,\r\n    details: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        margin: '20px'\r\n    },\r\n\r\n    title:{\r\n        padding: '0 16px',\r\n    },\r\n\r\n    cardActions: {\r\n        padding: '0 16px 8px 16px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    }\r\n}));","export default __webpack_public_path__ + \"static/media/VolcanoErupt.7107718b.png\";","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {Card, CardActions, CardContent, CardMedia, Button, Typography} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { deleteVolcano, updateCurrentVolcano, updateSearchBoolean } from '../../../actions/posts';\r\nimport useStyles from './styles';\r\nimport volcanoEruptPicture from './VolcanoErupt.png';\r\n\r\n\r\n\r\nconst Post = ({volcano})=>{\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const removeVolcano= (name)=>{\r\n        dispatch(deleteVolcano(name));\r\n\r\n    };\r\n\r\n    const edit = ()=>{\r\n        dispatch(updateCurrentVolcano(volcano.name))\r\n        dispatch(updateSearchBoolean(false))\r\n    };\r\n    \r\n    return (\r\n       <Card className={classes.card}>\r\n           <CardMedia className= {classes.media} image={volcanoEruptPicture} title={volcano.name} />\r\n           <div className= {classes.overlay}>\r\n                <Typography vartiant= 'h5'>Name: {volcano.name}</Typography>\r\n                <Typography variant= 'h6'>Type: {volcano.type}</Typography>\r\n           </div>\r\n           <CardContent>\r\n                <Typography className={classes.details} variant= \"body2\" color= 'textPrimary'>isActive: {JSON.stringify(volcano.isActive)}</Typography>\r\n                <Typography className={classes.details} variant= \"body2\" color= 'textPrimary'>Population: {volcano.population}</Typography>\r\n                <Typography className={classes.details} variant='body2' color= 'textPrimary'>Description: {volcano.description}</Typography>\r\n               <Typography className={classes.details} variant= \"body2\" color= 'textPrimary'>Discovered: {volcano.discovered}</Typography>\r\n               <Typography className={classes.details} variant= \"body2\" color= 'textPrimary'>Latitude: {volcano.latitude}</Typography>\r\n               <Typography className={classes.details} variant= \"body2\" color= 'textPrimary'>Longitude: {volcano.longitude}</Typography>\r\n           </CardContent>\r\n           <CardActions className= {classes.cardActions}>\r\n               <Button href= '#form' size= 'small' color='primary' onClick={()=>{edit()}}>\r\n                    <EditIcon />\r\n                    Edit\r\n               </Button>\r\n               <Button size= 'small' color= 'secondary' onClick= {()=>{ removeVolcano(volcano.name);}}>\r\n                    <DeleteIcon fontSize= 'small' />\r\n                    Delete\r\n               </Button>\r\n           </CardActions>\r\n\r\n       </Card>\r\n    )\r\n};\r\n\r\nexport default Post;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport default makeStyles((theme)=>({\r\n        mainContainer:{\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        },\r\n        smMargin:{\r\n            margin: theme.spacing(1,)\r\n        },\r\n        actionDiv:{\r\n            textAlign: 'center'\r\n        }\r\n}));","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nexport default makeStyles((theme)=>({\r\n    selectedPage:{\r\n        color: 'red'\r\n    },\r\n    otherPages:{\r\n        color: ''\r\n    }\r\n}));","import React from 'react';\r\nimport useStyles from './styles';\r\n\r\nfunction Pagination({postsPerPage, totalPosts, paginate, currentPage, setCurrentPage}) {\r\n    const pageNumbers = [];\r\n    const classes = useStyles();\r\n\r\n    for(let i=1; i<= Math.ceil(totalPosts / postsPerPage); i++){\r\n        pageNumbers.push(i);\r\n    };\r\n\r\n\r\n   const renderPageNumbers = ()=> pageNumbers.map(number => {\r\n       let selectedPageStyle = currentPage === number? classes.selectedPage : classes.otherPages;\r\n\r\n        if (number === 1 || number === pageNumbers.length || (number >= currentPage - 2 && number <= currentPage + 2)) {\r\n        return (\r\n            <li key={number} className=\"page-item\">\r\n            <span onClick= {()=> paginate(number)} className={selectedPageStyle + ' page-link'}>\r\n                {number}\r\n            </span>\r\n        </li>\r\n        )}\r\n      });\r\n\r\n    return (\r\n       <nav  id='pagination'>\r\n           <ul className= 'pagination'>  \r\n           <li className=\"page-item\">\r\n                <span onClick= {()=> {currentPage> 1? setCurrentPage(currentPage-1): setCurrentPage(currentPage)}} className=\"page-link\">\r\n                     &laquo;\r\n                </span>\r\n           </li>\r\n                {renderPageNumbers()}\r\n            <li className=\"page-item\">\r\n                <span onClick= {()=> {currentPage<pageNumbers.length? setCurrentPage(currentPage+1): setCurrentPage(currentPage)}} className=\"page-link\">\r\n                    &raquo;\r\n                 </span>\r\n           </li>\r\n           </ul>\r\n           \r\n       </nav>\r\n    )\r\n};\r\n\r\nexport default Pagination;\r\n","import React, {useState} from 'react';\r\nimport {Grid, CircularProgress} from '@material-ui/core';\r\nimport Post from './Post/Post'\r\nimport useStyles from './styles'\r\nimport { useSelector } from 'react-redux';\r\nimport Pagination from '../Pagination/Pagination';\r\nimport {getPosts } from '../../actions/posts';\r\n\r\n\r\nconst Posts = ({ setSearchBoolean})=>{\r\n    const volcanoes = useSelector((state)=> state.posts);\r\n    const classes = useStyles();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage, setPostsPerPage] = useState(6);\r\n    const indexOfLastVolcano = currentPage * postsPerPage;\r\n    const indexOfFirstVolcano = indexOfLastVolcano - postsPerPage;\r\n    const currentVolcanoes = volcanoes.slice(indexOfFirstVolcano, indexOfLastVolcano);\r\n    const paginate = (pageNumber)=> setCurrentPage(pageNumber); \r\n        \r\n\r\n    return (\r\n       !currentVolcanoes.length ? <CircularProgress /> : (\r\n           <Grid className= {classes.containter} container alignItems='stretch' spacing='5'>\r\n               {currentVolcanoes.map((volcano)=>(\r\n                   <Grid key={volcano._id} item xs={12} sm={6}>\r\n                       <Post getPosts={getPosts} setSearchBoolean= {setSearchBoolean} volcano={volcano}  />\r\n                   </Grid>\r\n\r\n               ))}\r\n                <Pagination setCurrentPage={setCurrentPage} currentPage={currentPage} postsPerPage={postsPerPage} totalPosts={volcanoes.length} paginate={paginate} />\r\n           </Grid>\r\n       )\r\n    )\r\n};\r\n\r\nexport default Posts;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport default makeStyles((theme)=>({\r\n        root: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(2),\r\n            marginTop: '30px',\r\n        },\r\n        form: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'center'\r\n        },\r\n        fileInput:{\r\n            width: '97%',\r\n            margin: '10px 0'\r\n        },\r\n        buttonSubmit:{\r\n            marginBottom: 10\r\n        }\r\n}));","import React, {useState, useEffect} from 'react';\r\nimport {TextField, Button, Typography, Paper} from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getPosts } from '../../actions/posts';\r\nimport { searchVolcano , updateVolcano, createVolcano, updateSearchBoolean } from '../../actions/posts';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst Form = ()=>{\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    var currentName = useSelector(state=>state.currentVolcano)\r\n    var searchBoolean = useSelector(state=>state.searchBoolean)\r\n    const currentVolcano = useSelector((state)=> currentName? state.posts.find((v)=> v.name === currentName): null);\r\n    const [volcanoData, setVolcanoData] = useState({\r\n        _id: \"\",\r\n        index: null,\r\n        isActive: null,\r\n        population: \"\",\r\n        name: \"\",\r\n        description: \"\",\r\n        discovered: \"\",\r\n        latitude: null,\r\n        longitude: null,\r\n        type: \"\"\r\n    });\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n        if(currentVolcano){\r\n            setVolcanoData(currentVolcano)\r\n        };\r\n    }, [currentName]);\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(currentName){\r\n            dispatch(updateVolcano(currentName, volcanoData));\r\n        }else if(searchBoolean){\r\n            dispatch(searchVolcano(volcanoData));\r\n        }else{\r\n        dispatch(createVolcano(volcanoData));\r\n        }\r\n        clear();\r\n    }\r\n\r\n    const clear = ()=>{\r\n        dispatch(updateVolcano(currentName, null));\r\n        setVolcanoData({\r\n            _id: \"\",\r\n            index: \"\",\r\n            isActive: \"\",\r\n            population: \"\",\r\n            name: \"\",\r\n            description: \"\",\r\n            discovered: \"\",\r\n            latitude: \"\",\r\n            longitude: \"\",\r\n            type: \"\"\r\n        });\r\n    };\r\n\r\n    const resetVolcanoes = ()=>{\r\n        dispatch(getPosts())\r\n    };\r\n\r\n    const flipIcon = ()=>{\r\n        dispatch(updateSearchBoolean(!searchBoolean))\r\n    };\r\n\r\n    return (\r\n        <Paper id='form' className={classes.paper}>\r\n            {searchBoolean? <AddIcon onClick={flipIcon} /> : <SearchIcon id='searchIcon' onClick={flipIcon}/>}\r\n                <HomeIcon id='homeIcon' onClick={resetVolcanoes} />\r\n            <form autoComplete= 'off' noValidate className= {`${classes.form} ${classes.root}`} onSubmit={handleSubmit}>\r\n                <Typography variant= 'h6'>{currentName? 'Editing': (searchBoolean? 'Searching':'Creating') } a Volcano</Typography>\r\n                {searchBoolean? <></>:<TextField\r\n                    name= 'isActive'\r\n                    variant= 'outlined'\r\n                    label = 'isActive'\r\n                    fullWidth\r\n                    value={volcanoData.isActive}\r\n                    onChange= {(e)=>setVolcanoData({...volcanoData, isActive: e.target.value})}\r\n                /> }\r\n                 {searchBoolean? <></>:<TextField\r\n                    name= 'population'\r\n                    variant= 'outlined'\r\n                    label = 'Population'\r\n                    fullWidth\r\n                    value={volcanoData.population}\r\n                    onChange= {(e)=>setVolcanoData({...volcanoData, population: e.target.value})}\r\n                /> }\r\n                \r\n                 <TextField\r\n                    name= 'name'\r\n                    variant= 'outlined'\r\n                    label = 'Name'\r\n                    fullWidth\r\n                    value={volcanoData.name}\r\n                    onChange= {(e)=>setVolcanoData({...volcanoData, name: e.target.value})}\r\n                />\r\n                {searchBoolean? <></>: <TextField\r\n                    name= 'description'\r\n                    variant= 'outlined'\r\n                    label = 'Description'\r\n                    fullWidth\r\n                    value={volcanoData.description}\r\n                    onChange= {(e)=>setVolcanoData({...volcanoData, description: e.target.value})}\r\n                />}\r\n                \r\n                {searchBoolean? <></>: <TextField\r\n                    name= 'discovered'\r\n                    variant= 'outlined'\r\n                    label = 'Discovered'\r\n                    fullWidth\r\n                    value={volcanoData.discovered}\r\n                    onChange= {(e)=>setVolcanoData({...volcanoData, discovered: e.target.value})}\r\n                />}\r\n\r\n                {searchBoolean? <></>: <TextField\r\n                    name= 'latitude'\r\n                    variant= 'outlined'\r\n                    label = 'Latitude'\r\n                    fullWidth\r\n                    value={volcanoData.latitude}\r\n                    onChange= {(e)=>setVolcanoData({...volcanoData, latitude: e.target.value})}\r\n                />}\r\n\r\n                {searchBoolean? <></>:<TextField\r\n                    name= 'longitude'\r\n                    variant= 'outlined'\r\n                    label = 'Longitude'\r\n                    fullWidth\r\n                    value={volcanoData.longitude}\r\n                    onChange= {(e)=>setVolcanoData({...volcanoData, longitude: e.target.value})}\r\n                />}\r\n                 \r\n                 \r\n                 \r\n                {searchBoolean? <Button className= {classes.buttonSubmit} variant = 'contained' color='primary' size='small' type= 'submit' fullWidth>\r\n                    Search\r\n                </Button>: <Button className= {classes.buttonSubmit} variant = 'contained' color='primary' size= 'large' fullWidth type= 'submit'>\r\n                    Submit\r\n                </Button> }\r\n                <Button className= {classes.buttonSubmit} variant = 'contained' color='secondary' size='small' onClick={clear} fullWidth>\r\n                    Clear\r\n                </Button>\r\n                \r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Form;","export default __webpack_public_path__ + \"static/media/volcano.9fa67366.png\";","import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport default makeStyles(()=>({\r\n        appBar:{\r\n            borderRadius: 15,\r\n            margin: '30px 0',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        heading:{\r\n            color: 'black'\r\n        },\r\n        image:{\r\n            marginLeft: '15 px',\r\n        }\r\n}));","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {Container, AppBar, Typography, Grow, Grid} from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport {getPosts } from './actions/posts';\nimport Posts from './components/Posts/Posts';\nimport Form from './components/Form/Form';\nimport Volcano from './assets/volcano.png';\nimport useStyles from './styles';\n\nfunction App() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n      \n    useEffect(()=>{\n      dispatch(getPosts());\n    });\n\n    \n  return (\n    <Container maxWidth= 'lg'>\n      <AppBar className={classes.AppBar} position = 'static' color= 'inherit'>\n        <Typography className={classes.heading} variant = 'h2' align= 'center'>\n          Volcanoes\n        </Typography>\n        <img className= {classes.image} src={Volcano} alt='Volcanoes' height= '80'  />\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid container justify= 'space-between' alignItems= 'stretch' spacing= {3}>\n            <Grid item xs={12} sm={7}>\n              <Posts />\n           </Grid>\n           <Grid item xs={12} sm={4}> \n            <Form />\n           </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from 'redux';\r\n\r\nimport posts from './posts';\r\nimport currentVolcano from './currentVolcano';\r\nimport searchBoolean from './searchBoolean';\r\n\r\nexport default combineReducers({\r\n    posts,\r\n    currentVolcano,\r\n    searchBoolean,\r\n});","export default (state = [], action)=>{\r\n    switch(action.type){\r\n        case 'FETCH_ALL' :\r\n            return action.payload;\r\n        case 'CREATE' :\r\n            return [...state, action.payload];\r\n        case 'UPDATE': \r\n            return state.map(volcano=> volcano.name === action.payload.name ? action.payload : volcano);   \r\n        case 'DELETE':\r\n            return state.filter(volcano=> volcano.name !== action.payload);\r\n        case 'SEARCH':\r\n            return action.payload;    \r\n        default:\r\n            return state;\r\n    };\r\n};","export default (state = null, action)=>{\r\n    switch(action.type){\r\n        case 'UPDATE_CURRENT_VOLCANO' :\r\n            return action.payload;   \r\n        default:\r\n            return state;\r\n    };\r\n};","export default (state = false, action)=>{\r\n    switch(action.type){\r\n        case 'UPDATE_SEARCH_BOOLEAN' :\r\n            return action.payload;   \r\n        default:\r\n            return state;\r\n    };\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from './reducers';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}